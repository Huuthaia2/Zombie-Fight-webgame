[1,["3fMLMja7ZKRLMsE9bVsMak@6c48a","894/mkHx1P8rlAGmQxHvF4@6c48a","ebZysjbkpEf6SJJUZ9QHai"],["mainTexture","bloodTexture","_effectAsset"],[["cc.Material",["_techIdx","_states","_defines","_props"],0,12],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,1,2,3,4],[1,0,1,2,4]],[[[[0,"1",[{"rasterizerState":{},"depthStencilState":{"depthWrite":false},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0,"bloodTexture",6,1]],11]]],0,0,[0,0,0],[0,1,2],[0,1,2]],[[[1,"deadBlood",[{"hash":1985849658,"name":"deadBlood|vs|unlit-fs:frag","glsl4":{"vert":"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_animData;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 0) out vec2 v_uv;\nlayout(location = 1) out float v_blood;\nlayout(set = 1, binding = 0) uniform myData {\n  vec4 groupPos[30];\n};\nvoid main () {\n  v_uv = a_texCoord;\n  int index = int(a_animData.w);\n  vec4 anim = groupPos[index];\n  float t = cc_time.x - anim.w;\n  float blood = step(0.0, t - a_position.z);\n  v_blood = blood;\n  t = min(t, a_position.z);\n  vec3 spd = vec3(a_animData.xyz);\n  vec4 pos = vec4(anim);\n  pos.w = 1.0;\n  pos.xz += spd.xz * t;\n  pos.y += spd.y * t - 5.0 * t * t;\n  pos.x += a_position.x * blood * 2.5;\n  pos.z -= a_position.y * blood * 2.5;\n  pos = cc_matView * pos;\n  pos.xy += a_position.xy * (1.0 - blood);\n  pos.w = 1.0;\n  gl_Position = cc_matProj * pos;\n}","frag":"\nprecision highp float;\nlayout(location = 0) in vec2 v_uv;\nlayout(location = 1) in float v_blood;\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\nlayout(set = 1, binding = 3) uniform sampler2D bloodTexture;\nlayout(set = 1, binding = 1) uniform Constant {\n  vec4 mainColor;\n};\nvec4 frag () {\n  vec4 c0 = texture(mainTexture, v_uv);\n  vec4 c1 = texture(bloodTexture, v_uv);\n  c0 = mix(c0, c1, v_blood);\n  return c0;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nin vec3 a_position;\nin vec4 a_animData;\nin vec2 a_texCoord;\nout vec2 v_uv;\nout float v_blood;\nlayout(std140) uniform myData {\n  vec4 groupPos[30];\n};\nvoid main () {\n  v_uv = a_texCoord;\n  int index = int(a_animData.w);\n  vec4 anim = groupPos[index];\n  float t = cc_time.x - anim.w;\n  float blood = step(0.0, t - a_position.z);\n  v_blood = blood;\n  t = min(t, a_position.z);\n  vec3 spd = vec3(a_animData.xyz);\n  vec4 pos = vec4(anim);\n  pos.w = 1.0;\n  pos.xz += spd.xz * t;\n  pos.y += spd.y * t - 5.0 * t * t;\n  pos.x += a_position.x * blood * 2.5;\n  pos.z -= a_position.y * blood * 2.5;\n  pos = cc_matView * pos;\n  pos.xy += a_position.xy * (1.0 - blood);\n  pos.w = 1.0;\n  gl_Position = cc_matProj * pos;\n}","frag":"\nprecision highp float;\nin vec2 v_uv;\nin float v_blood;\nuniform sampler2D mainTexture;\nuniform sampler2D bloodTexture;\nlayout(std140) uniform Constant {\n  vec4 mainColor;\n};\nvec4 frag () {\n  vec4 c0 = texture(mainTexture, v_uv);\n  vec4 c1 = texture(bloodTexture, v_uv);\n  c0 = mix(c0, c1, v_blood);\n  return c0;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp vec4 cc_time;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\nattribute vec3 a_position;\nattribute vec4 a_animData;\nattribute vec2 a_texCoord;\nvarying vec2 v_uv;\nvarying float v_blood;\n   uniform vec4 groupPos[30];\nvoid main () {\n  v_uv = a_texCoord;\n  int index = int(a_animData.w);\n  vec4 anim = groupPos[index];\n  float t = cc_time.x - anim.w;\n  float blood = step(0.0, t - a_position.z);\n  v_blood = blood;\n  t = min(t, a_position.z);\n  vec3 spd = vec3(a_animData.xyz);\n  vec4 pos = vec4(anim);\n  pos.w = 1.0;\n  pos.xz += spd.xz * t;\n  pos.y += spd.y * t - 5.0 * t * t;\n  pos.x += a_position.x * blood * 2.5;\n  pos.z -= a_position.y * blood * 2.5;\n  pos = cc_matView * pos;\n  pos.xy += a_position.xy * (1.0 - blood);\n  pos.w = 1.0;\n  gl_Position = cc_matProj * pos;\n}","frag":"\nprecision highp float;\nvarying vec2 v_uv;\nvarying float v_blood;\nuniform sampler2D mainTexture;\nuniform sampler2D bloodTexture;\nvec4 frag () {\n  vec4 c0 = texture2D(mainTexture, v_uv);\n  vec4 c1 = texture2D(bloodTexture, v_uv);\n  c0 = mix(c0, c1, v_blood);\n  return c0;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[]},"locals":{"blocks":[],"samplerTextures":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":67,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":1}},"defines":[],"blocks":[{"name":"myData","stageFlags":1,"binding":0,"members":[{"name":"groupPos","type":16,"count":30}],"defines":[]},{"name":"Constant","stageFlags":16,"binding":1,"members":[{"name":"mainColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]},{"name":"bloodTexture","type":28,"count":1,"stageFlags":16,"binding":3,"defines":[]}],"attributes":[{"name":"a_position","type":15,"count":1,"stageFlags":1,"format":32,"location":0,"defines":[]},{"name":"a_animData","type":16,"count":1,"stageFlags":1,"format":44,"location":1,"defines":[]},{"name":"a_texCoord","type":14,"count":1,"stageFlags":1,"format":21,"location":2,"defines":[]}],"varyings":[{"name":"v_uv","type":14,"count":1,"stageFlags":1,"location":0,"defines":[]},{"name":"v_blood","type":13,"count":1,"stageFlags":1,"location":1,"defines":[]}]}],[{"name":"opaque","passes":[{"program":"deadBlood|vs|unlit-fs:frag","properties":{"mainTexture":{"value":"white","type":28},"bloodTexture":{"value":"white","type":28},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"type":"color"}}}}]},{"name":"transparent","passes":[{"program":"deadBlood|vs|unlit-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":2,"blendDstAlpha":4}]},"properties":{"mainTexture":{"value":"white","type":28},"bloodTexture":{"value":"white","type":28},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"type":"color"}}}}]}]]],0,0,[],[],[]]]]
